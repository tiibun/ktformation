AWSTemplateFormatVersion: '2010-09-09'
Description: |
  Serverless Express Application/API powered by API Gateway and Lambda
Outputs:
  LambdaFunctionConsoleUrl:
    Description: Console URL for the Lambda Function.
    Value: !Join
    - ''
    - - https://
      - !Ref 'AWS::Region'
      - .console.aws.amazon.com/lambda/home?region=
      - !Ref 'AWS::Region'
      - '#/functions/'
      - !Ref 'YOUR_SERVERLESS_EXPRESS_LAMBDA_FUNCTION_NAME'
  ApiGatewayApiConsoleUrl:
    Description: Console URL for the API Gateway API's Stage.
    Value: !Join
    - ''
    - - https://
      - !Ref 'AWS::Region'
      - .console.aws.amazon.com/lambda/home?region=
      - !Ref 'AWS::Region'
      - '#/apis/'
      - !Ref 'ApiGatewayApi'
      - /stages/prod
  ApiUrl:
    Description: |-
      Invoke URL for your API. Clicking this link will perform a GET request
      on the root resource of your API.
    Value: !Join
    - ''
    - - https://
      - !Ref 'ApiGatewayApi'
      - .execute-api.
      - !Ref 'AWS::Region'
      - .amazonaws.com/prod/
Resources:
  ApiGatewayApi:
    Properties:
      DefinitionUri: ./simple-proxy-api.yaml
      StageName: prod
      Variables:
        ServerlessExpressLambdaFunctionName: !Ref 'YOUR_SERVERLESS_EXPRESS_LAMBDA_FUNCTION_NAME'
    Type: AWS::Serverless::Api
  LambdaExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
      Path: /
      Policies:
      - PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource: arn:aws:logs:*:*:*
        PolicyName: root
    Type: AWS::IAM::Role
  LambdaApiGatewayExecutionPermission:
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref 'YOUR_SERVERLESS_EXPRESS_LAMBDA_FUNCTION_NAME'
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
      - ''
      - - 'arn:aws:execute-api:'
        - !Ref 'AWS::Region'
        - ':'
        - !Ref 'AWS::AccountId'
        - ':'
        - !Ref 'ApiGatewayApi'
        - /*/*
    Type: AWS::Lambda::Permission
  YOUR_SERVERLESS_EXPRESS_LAMBDA_FUNCTION_NAME:
    Properties:
      CodeUri: ./
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref 'ApiGatewayApi'
            Path: /
            Method: ANY
        ProxyApiGreedy:
          Type: Api
          Properties:
            RestApiId: !Ref 'ApiGatewayApi'
            Path: /{proxy+}
            Method: ANY
      Handler: lambda.handler
      MemorySize: 1024
      Role: !GetAtt
      - LambdaExecutionRole
      - Arn
      Runtime: nodejs6.10
      Timeout: 30
    Type: AWS::Serverless::Function
Transform: AWS::Serverless-2016-10-31
